[{
	"title": "Assignment-4",
	"activityType": "assignment",
	"quizDescription":"Consider table Worker(name,pay) where name is a key, and the following two concurrent transactions.<code>T1:<br>  Begin Transaction<br>  S1: update Worker set pay = 2*pay where name = 'Amy'<br>  S2: update Worker set pay = 3*pay where name = 'Amy'<br>  Commit<br>T2:<br>  Begin Transaction<br>  S3: update Worker set pay = pay-20 where name = 'Amy'<br>  S4: update Worker set pay = pay-10 where name = 'Amy'<br>  Commit</code><br> Assume that the individual statements S1, S2, S3, and S4 always execute atomically. Let Amy's pay be 50 before either transaction begins execution. ",
	"questions": [{
			"questionType": "filesubmission",
			"questionText": " Suppose both transactions T1 and T2 execute to completion with isolation level Serializable. What are the possible values for Amy's final pay? ",
			"points":"1"

		},

		{
			"questionType": "filesubmission",
			"questionText": " Suppose both transactions T1 and T2 execute to completion with isolation level Read-Committed. What are the possible values for Amy's final pay? ",
			"points":"1"

		},

		{
			"questionType": "filesubmission",
			"questionText": " Suppose transaction T1 executes with isolation level Read-Committed, transaction T2 executes with isolation level Read-Uncommitted, and both transactions execute to completion. What are the possible values for Amy's final pay? ",
			"points":"1"

		},

		{
			"questionType": "filesubmission",
			"questionText": " Suppose both transactions T1 and T2 execute to completion with isolation level Read-Uncommitted. What are the possible values for Amy's final pay? ",
			"points":"1"

		},

		{
			"questionType": "filesubmission",
			"questionText": " Suppose both transactions T1 and T2 execute with isolation level Serializable. Transaction T1 executes to completion, but transaction T2 rolls back after statement S3 and does not re-execute. What are the possible values for Amy's final pay? ",
			"points":"1"
			
		}

	]
}]